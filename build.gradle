apply plugin: 'java'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile group: 'it.unimi.di', name: 'mg4j-big', version: '5.4.1'
    compile group: 'org.tukaani', name: 'xz', version: '1.5'
    compile group: 'net.bpiwowar', name: 'argj', version: '1.1.4'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
    compile group: 'com.martiansoftware', name: 'jsap', version: '2.1'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.2.6'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.3.1'
    compile group: 'net.bpiwowar', name: 'experimaestro-helper', version: '1.0.0-SNAPSHOT'
}

//configurations {
//    runtime.exclude group: "org.slf4j", name: "slf4j-simple"
//}

// Outputs the classpath (one line per path)
task show << {
   println tasks.jar.archivePath
   configurations.runtime.each { println it }
}

// Creates a big fat jar
task fatJar(type: Jar, dependsOn: 'generateTasks') {
    baseName = project.name + '-all'
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}


task(generateTasks, dependsOn: 'classes', type: JavaExec) {
    main = 'net.bpiwowar.experimaestro.tasks.Analyze'
    def outputFile = new File(buildDir, "resources/main/META-INF/net.bpiwowar.experimaestro/tasks.json")
    classpath = sourceSets.main.runtimeClasspath
    args outputFile.toString(), sourceSets.main.runtimeClasspath.getAsPath()
}

task(runTask, type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'net.bpiwowar.experimaestro.tasks.Runner'
    if (System.getProperty("exec.args") != null) {
        args System.getProperty("exec.args").split()
    }
}